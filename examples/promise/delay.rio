// Delay Example

export total1, total2

import 'promise' { resolve }
import 'io' { delay }

maxDelay = 1500

// limit :: Number -> Number
limit = ifElse(lt(maxDelay), always(maxDelay), identity)

// calc :: [{value::Number}] -> Number
calc = limit . sum . map(prop('value'))

// total1 :: [{value::Number}] -> Promise(Number)
total1 = inputs -> resolve(calc(inputs)) >>> delay

// total2 :: [{value::Number}] -> Promise(Number)
total2 = delay <<> resolve . calc

