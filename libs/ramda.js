const R = require('ramda')

module.exports = {
    names:[
        "F",
        "T",
        "add",
        "addIndex",
        "adjust",
        "all",
        "allPass",
        "always",
        "and",
        "any",
        "anyPass",
        "ap",
        "aperture",
        "append",
        "apply",
        "applySpec",
        "applyTo",
        "ascend",
        "assoc",
        "assocPath",
        "binary",
        "bind",
        "both",
        "call",
        "chain",
        "clamp",
        "clone",
        "comparator",
        "complement",
        "compose",
        "concat",
        "cond",
        "contains",
        "converge",
        "countBy",
        "curry",
        "curryN",
        "dec",
        "defaultTo",
        "descend",
        "difference",
        "differenceWith",
        "dissoc",
        "dissocPath",
        "divide",
        "drop",
        "dropLast",
        "dropLastWhile",
        "droppeats",
        "droppeatsWith",
        "dropWhile",
        "either",
        "empty",
        "endsWith",
        "eqBy",
        "eqProps",
        "equals",
        "evolve",
        "filter",
        "find",
        "findIndex",
        "findLast",
        "findLastIndex",
        "flatten",
        "flip",
        "forEach",
        "forEachObjIndexed",
        "fromPairs",
        "groupBy",
        "groupWith",
        "gt",
        "gte",
        "has",
        "hasIn",
        "head",
        "identical",
        "identity",
        "ifElse",
        "inc",
        "indexBy",
        "indexOf",
        "init",
        "innerJoin",
        "insert",
        "insertAll",
        "intersection",
        "intersperse",
        "into",
        "invert",
        "invertObj",
        "invoker",
        "is",
        "isEmpty",
        "isNil",
        "join",
        "juxt",
        "keys",
        "last",
        "lastIndexOf",
        "length",
        "lens",
        "lensIndex",
        "lensPath",
        "lensProp",
        "lift",
        "liftN",
        "lt",
        "lte",
        "map",
        "mapAccum",
        "mapAccumght",
        "mapObjIndexed",
        "match",
        "mathMod",
        "max",
        "maxBy",
        "mean",
        "median",
        "memoizeWith",
        "merge",
        "mergeAll",
        "mergeDeepLeft",
        "mergeDeepght",
        "mergeDeepWith",
        "mergeDeepWithKey",
        "mergeWith",
        "mergeWithKey",
        "min",
        "minBy",
        "modulo",
        "multiply",
        "nAry",
        "negate",
        "none",
        "not",
        "nth",
        "nthArg",
        "o",
        "objOf",
        "of",
        "omit",
        "once",
        "or",
        "over",
        "pair",
        "partial",
        "partialght",
        "partition",
        "path",
        "pathEq",
        "pathOr",
        "pathSatisfies",
        "pick",
        "pickAll",
        "pickBy",
        "pipe",
        "pipeK",
        "pipeP",
        "pluck",
        "prepend",
        "product",
        "project",
        "prop",
        "propEq",
        "propIs",
        "propOr",
        "propSatisfies",
        "props",
        "range",
        "reduce",
        "reduceBy",
        "reduceght",
        "reduceWhile",
        "reduced",
        "reject",
        "remove",
        "repeat",
        "replace",
        "reverse",
        "scan",
        "sequence",
        "set",
        "slice",
        "sort",
        "sortBy",
        "sortWith",
        "split",
        "splitAt",
        "splitEvery",
        "splitWhen",
        "startsWith",
        "subtract",
        "sum",
        "symmetricDifference",
        "symmetricDifferenceWith",
        "tail",
        "take",
        "takeLast",
        "takeLastWhile",
        "takeWhile",
        "tap",
        "test",
        "times",
        "toLower",
        "toPairs",
        "toPairsIn",
        "toString",
        "toUpper",
        "transduce",
        "transpose",
        "traverse",
        "trim",
        "tryCatch",
        "type",
        "unapply",
        "unary",
        "uncurryN",
        "unfold",
        "union",
        "unionWith",
        "uniq",
        "uniqBy",
        "uniqWith",
        "unless",
        "unnest",
        "until",
        "update",
        "useWith",
        "values",
        "valuesIn",
        "view",
        "when",
        "where",
        "whereEq",
        "without",
        "xprod",
        "zip",
        "zipObj",
        "zipWith"
    ],
    functions:[
        R.F,
        R.T,
        R.add,
        R.addIndex,
        R.adjust,
        R.all,
        R.allPass,
        R.always,
        R.and,
        R.any,
        R.anyPass,
        R.ap,
        R.aperture,
        R.append,
        R.apply,
        R.applySpec,
        R.applyTo,
        R.ascend,
        R.assoc,
        R.assocPath,
        R.binary,
        R.bind,
        R.both,
        R.call,
        R.chain,
        R.clamp,
        R.clone,
        R.comparator,
        R.complement,
        R.compose,
        R.concat,
        R.cond,
        R.contains,
        R.converge,
        R.countBy,
        R.curry,
        R.curryN,
        R.dec,
        R.defaultTo,
        R.descend,
        R.difference,
        R.differenceWith,
        R.dissoc,
        R.dissocPath,
        R.divide,
        R.drop,
        R.dropLast,
        R.dropLastWhile,
        R.droppeats,
        R.droppeatsWith,
        R.dropWhile,
        R.either,
        R.empty,
        R.endsWith,
        R.eqBy,
        R.eqProps,
        R.equals,
        R.evolve,
        R.filter,
        R.find,
        R.findIndex,
        R.findLast,
        R.findLastIndex,
        R.flatten,
        R.flip,
        R.forEach,
        R.forEachObjIndexed,
        R.fromPairs,
        R.groupBy,
        R.groupWith,
        R.gt,
        R.gte,
        R.has,
        R.hasIn,
        R.head,
        R.identical,
        R.identity,
        R.ifElse,
        R.inc,
        R.indexBy,
        R.indexOf,
        R.init,
        R.innerJoin,
        R.insert,
        R.insertAll,
        R.intersection,
        R.intersperse,
        R.into,
        R.invert,
        R.invertObj,
        R.invoker,
        R.is,
        R.isEmpty,
        R.isNil,
        R.join,
        R.juxt,
        R.keys,
        R.last,
        R.lastIndexOf,
        R.length,
        R.lens,
        R.lensIndex,
        R.lensPath,
        R.lensProp,
        R.lift,
        R.liftN,
        R.lt,
        R.lte,
        R.map,
        R.mapAccum,
        R.mapAccumght,
        R.mapObjIndexed,
        R.match,
        R.mathMod,
        R.max,
        R.maxBy,
        R.mean,
        R.median,
        R.memoizeWith,
        R.merge,
        R.mergeAll,
        R.mergeDeepLeft,
        R.mergeDeepght,
        R.mergeDeepWith,
        R.mergeDeepWithKey,
        R.mergeWith,
        R.mergeWithKey,
        R.min,
        R.minBy,
        R.modulo,
        R.multiply,
        R.nAry,
        R.negate,
        R.none,
        R.not,
        R.nth,
        R.nthArg,
        R.o,
        R.objOf,
        R.of,
        R.omit,
        R.once,
        R.or,
        R.over,
        R.pair,
        R.partial,
        R.partialght,
        R.partition,
        R.path,
        R.pathEq,
        R.pathOr,
        R.pathSatisfies,
        R.pick,
        R.pickAll,
        R.pickBy,
        R.pipe,
        R.pipeK,
        R.pipeP,
        R.pluck,
        R.prepend,
        R.product,
        R.project,
        R.prop,
        R.propEq,
        R.propIs,
        R.propOr,
        R.propSatisfies,
        R.props,
        R.range,
        R.reduce,
        R.reduceBy,
        R.reduceght,
        R.reduceWhile,
        R.reduced,
        R.reject,
        R.remove,
        R.repeat,
        R.replace,
        R.reverse,
        R.scan,
        R.sequence,
        R.set,
        R.slice,
        R.sort,
        R.sortBy,
        R.sortWith,
        R.split,
        R.splitAt,
        R.splitEvery,
        R.splitWhen,
        R.startsWith,
        R.subtract,
        R.sum,
        R.symmetricDifference,
        R.symmetricDifferenceWith,
        R.tail,
        R.take,
        R.takeLast,
        R.takeLastWhile,
        R.takeWhile,
        R.tap,
        R.test,
        R.times,
        R.toLower,
        R.toPairs,
        R.toPairsIn,
        R.toString,
        R.toUpper,
        R.transduce,
        R.transpose,
        R.traverse,
        R.trim,
        R.tryCatch,
        R.type,
        R.unapply,
        R.unary,
        R.uncurryN,
        R.unfold,
        R.union,
        R.unionWith,
        R.uniq,
        R.uniqBy,
        R.uniqWith,
        R.unless,
        R.unnest,
        R.until,
        R.update,
        R.useWith,
        R.values,
        R.valuesIn,
        R.view,
        R.when,
        R.where,
        R.whereEq,
        R.without,
        R.xprod,
        R.zip,
        R.zipObj,
        R.zipWith
    ]
};

